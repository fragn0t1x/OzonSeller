#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

import sys
import os

sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from app import create_app, db
from app.models import OzonCategory, Product, ProductVariation, OurWarehouseStock
from tests.test_data import TEST_CATEGORIES, TEST_PRODUCTS, TEST_VARIATIONS


def populate_test_data():
    """–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    app = create_app()

    with app.app_context():
        print("üßπ –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (–∏–∑-–∑–∞ foreign keys)
        OurWarehouseStock.query.delete()
        ProductVariation.query.delete()
        Product.query.delete()
        OzonCategory.query.delete()
        db.session.commit()

        print("üì¶ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π...")
        for category_data in TEST_CATEGORIES:
            category = OzonCategory(**category_data)
            db.session.add(category)
        db.session.commit()

        print("üõçÔ∏è –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤...")
        for product_data in TEST_PRODUCTS:
            product = Product(**product_data)
            db.session.add(product)
        db.session.commit()

        print("üìä –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –≤–∞—Ä–∏–∞—Ü–∏–π...")
        for variation_data in TEST_VARIATIONS:
            variation = ProductVariation(**variation_data)
            db.session.add(variation)
            # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö –¥–ª—è –∫–∞–∂–¥–æ–π –≤–∞—Ä–∏–∞—Ü–∏–∏
            stock = OurWarehouseStock(variation=variation)
            db.session.add(stock)
        db.session.commit()

        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!")
        print(f"üìä –ö–∞—Ç–µ–≥–æ—Ä–∏–π: {len(TEST_CATEGORIES)}")
        print(f"üõçÔ∏è –¢–æ–≤–∞—Ä–æ–≤: {len(TEST_PRODUCTS)}")
        print(f"üìä –í–∞—Ä–∏–∞—Ü–∏–π: {len(TEST_VARIATIONS)}")


if __name__ == '__main__':
    populate_test_data()